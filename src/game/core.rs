use crate::game;
use crate::util;

/// Runs the guessing number game.
///
/// Generates a random number based on users choice of range.
///
/// The user has 3 tries to guess the number.
///
/// # Variables
///
/// * `tries` - Number of tries the user has left.
///
///     - This variable decreases every time the user guesses.
///     - If this variable reaches 0 user loses.
///
/// * `secret_number` - The number the user is trying to guess.
///
///     - Secrete number generated by the program.
///
/// * `guess` - The user's guess.
///
///     - This variable resets every time the user guesses.
///
///
/// # Functions
///
///   - [util::get_random_number] to generate a random number.
///   - [util::get_number_from_user] to get a number from the user.
///   - [game::validate_guess] to check game status.
///
pub fn run() {
    let mut tries = 3;

    println!("Please enter the range (default is 100).");

    let secret_number = util::get_random_number(util::get_number_from_user());

    println!("Please enter your guess. (1-100)");

    while tries > 0 {
        let guess = util::get_number_from_user();

        if game::validate_guess(guess, secret_number, tries) {
            break;
        }

        tries -= 1;
        if tries > 0 {
            println!("You have {tries} tries left")
        }
    }

    if tries == 0 {
        println!("You lose!");
        println!("Number was: {secret_number}");
    }
}
